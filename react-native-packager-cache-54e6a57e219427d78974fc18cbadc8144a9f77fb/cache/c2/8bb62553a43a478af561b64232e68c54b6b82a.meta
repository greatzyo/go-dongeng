["e1ee29e81c8605e27c7b21f782373ff2bcdae0ed","b3724a4722388dbcb114eafe39ed8b437b25edc6",["react","react-native","react-navigation","./styles","./FormHeader","./ReadScreen"],[87,184,233,277,378,491],{"version":3,"sources":["/home/dhamaddam/AndroidStudioProjects/go-dongeng/Pages/Home.js"],"names":["Home","props","ListViewItemSeparator","height","width","backgroundColor","state","isLoading","flower_name","alert","fetch","then","response","json","responseJson","ds","DataSource","rowHasChanged","r1","r2","setState","dataSource","cloneWithRows","catch","error","console","navigate","navigation","flex","paddingTop","styles","container","rowData","flexDirection","TouchImage","uri","picture","imageViewContainer","GetItem","bind","title","textViewContainer","navigationOptions","header","create","justifyContent","registerComponent"],"mappings":";;;;AAAA;;;;AACA;;AAcA;;AACA;;;;AACA;;;;AACA;;;;IAEqBA,I;;;AAEpB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,wHACXA,KADW;;AAAA,UAoCnBC,qBApCmB,GAoCK,YAAM;AAC5B,aACE;AACE,eAAO;AACLC,kBAAQ,EADH;AAELC,iBAAO,MAFF;AAGLC,2BAAiB;AAHZ;AADT,QADF;AASD,KA9CkB;;AAEjB,UAAKC,KAAL,GAAa;AACXC,iBAAW;AADA,KAAb;AAFiB;AAKlB;;;;4BAMOC,W,EAAa;;AAEpB,yBAAMC,KAAN,CAAYD,WAAZ;AAEA;;;wCAGmB;AAAA;;AAElB,aAAOE,MAAM,6CAAN,EACJC,IADI,CACC,UAACC,QAAD;AAAA,eAAcA,SAASC,IAAT,EAAd;AAAA,OADD,EAEJF,IAFI,CAEC,UAACG,YAAD,EAAkB;AACtB,YAAIC,KAAK,IAAI,sBAASC,UAAb,CAAwB,EAACC,eAAe,uBAACC,EAAD,EAAKC,EAAL;AAAA,mBAAYD,OAAOC,EAAnB;AAAA,WAAhB,EAAxB,CAAT;AACA,eAAKC,QAAL,CAAc;AACZb,qBAAW,KADC;AAEZc,sBAAYN,GAAGO,aAAH,CAAiBR,YAAjB;AAFA,SAAd,EAGG,YAAW,CAEb,CALD;AAMD,OAVI,EAWJS,KAXI,CAWE,UAACC,KAAD,EAAW;AAChBC,gBAAQD,KAAR,CAAcA,KAAd;AACD,OAbI,CAAP;AAcD;;;6BAcQ;AAAA;;AAAA,UAECE,QAFD,GAEc,KAAKzB,KAAL,CAAW0B,UAFzB,CAECD,QAFD;;AAGP,UAAI,KAAKpB,KAAL,CAAWC,SAAf,EAA0B;AACxB,eAEK;AAAA;AAAA,YAAM,OAAO,EAACqB,MAAM,CAAP,EAAUC,YAAY,EAAtB,EAAb;AACE;AADF,SAFL;AAMD;;AAED,aAEE;AAAA;AAAA,UAAM,OAAOC,OAAOC,SAApB;AACE,iEADF;AAEE;;AAEC,sBAAY,KAAKzB,KAAL,CAAWe,UAFxB;;AAIC,2BAAkB,KAAKnB,qBAJxB;;AAMC,qBAAW,mBAAC8B,OAAD;AAAA,mBAEX;AAAA;AAAA,gBAAM,OAAO,EAACJ,MAAK,CAAN,EAASK,eAAe,KAAxB,EAAb;AACA;AAAA;AAAA,kBAAoB,SAAU;AAAA,2BAAMP,SAAS,YAAT,CAAN;AAAA,mBAA9B,EAA4D,OAAO,iBAAaQ,UAAhF;AACI;AAAA;AAAA,oBAAO,QAAU,EAAEC,KAAI,mEAAiEH,QAAQI,OAA/E,EAAjB,EAA2G,OAAO,iBAAaC,kBAA/H;AACE;AAAA;AAAA,sBAAM,SAAS,OAAKC,OAAL,CAAaC,IAAb,SAAwBP,QAAQQ,KAAhC,CAAf,EAAuD,OAAO,iBAAaC,iBAA3E;AAAgGT,4BAAQQ;AAAxG;AADF;AADJ;AADA,aAFW;AAAA;AANZ;AAFF,OAFF;AA0BD;;;;;AAxFmBxC,I,CAQb0C,iB,GAAoB;AACzBC,UAAQ,IADiB;AAEzBH,SAAO;AAFkB,C;kBARPxC,I;;;AA6FrB,IAAM8B,SAAS,wBAAWc,MAAX,CAAkB;AAC/Bb,aAAY;AACVH,UAAM,CADI;AAEViB,oBAAgB,QAFN;AAGVxC,qBAAiB,WAHP;AAIV4B,mBAAe;AAJL;AADmB,CAAlB,CAAf;;AASA,yBAAYa,iBAAZ,CAA8B,YAA9B,EAA4C;AAAA,SAAM9C,IAAN;AAAA,CAA5C","sourcesContent":["import React, { Component } from 'react';\nimport {\n  AppRegistry ,\n  TouchableHighlight ,\n  Dimensions ,\n  StyleSheet ,\n  ActivityIndicator ,\n  ListView ,\n  Text ,\n  View ,\n  Alert ,\n  Image ,\n  Platform\n} from 'react-native';\n\nimport { StackNavigator } from 'react-navigation';\nimport GlobalStyles from \"./styles\";\nimport FormHeader from \"./FormHeader\";\nimport ReadScreen from \"./ReadScreen\";\n\nexport default class Home extends Component {\n\n constructor(props) {\n   super(props);\n   this.state = {\n     isLoading: true\n   }\n }\n static navigationOptions = {\n   header: null ,\n   title: 'Home',\n };\n\nGetItem (flower_name) {\n\n  Alert.alert(flower_name);\n\n }\n\n\n componentDidMount() {\n\n   return fetch('http://go-dongeng.com/ajax/show_all_article')\n     .then((response) => response.json())\n     .then((responseJson) => {\n       let ds = new ListView.DataSource({rowHasChanged: (r1, r2) => r1 !== r2});\n       this.setState({\n         isLoading: false,\n         dataSource: ds.cloneWithRows(responseJson),\n       }, function() {\n         // In this block you can do something with new state.\n       });\n     })\n     .catch((error) => {\n       console.error(error);\n     });\n }\n\n ListViewItemSeparator = () => {\n   return (\n     <View\n       style={{\n         height: .5,\n         width: \"100%\",\n         backgroundColor: \"#000\",\n       }}\n     />\n   );\n }\n\n render() {\n\n   const { navigate } = this.props.navigation;\n   if (this.state.isLoading) {\n     return (\n\n          <View style={{flex: 1, paddingTop: 20}}>\n            <ActivityIndicator />\n           </View>\n     );\n   }\n\n   return (\n\n     <View style={styles.container} >\n       <FormHeader />\n       <ListView\n\n        dataSource={this.state.dataSource}\n\n        renderSeparator= {this.ListViewItemSeparator}\n\n        renderRow={(rowData) =>\n\n        <View style={{flex:1, flexDirection: 'row'}}>\n        <TouchableHighlight onPress= {() => navigate('ReadScreen')} style={GlobalStyles.TouchImage} >\n            <Image source = {{ uri:'http://www.go-dongeng.com/assets/theme/default/images/content/'+rowData.picture }} style={GlobalStyles.imageViewContainer} >\n              <Text onPress={this.GetItem.bind(this, rowData.title)} style={GlobalStyles.textViewContainer} >{rowData.title}</Text>\n            </Image>\n        </TouchableHighlight>\n        </View>\n\n         }\n       />\n\n\n     </View>\n   );\n }\n}\n\n\n\nconst styles = StyleSheet.create({\n  container : {\n    flex: 1,\n    justifyContent: 'center' ,\n    backgroundColor: 'lightgrey',\n    flexDirection: 'column',\n  },\n});\n\nAppRegistry.registerComponent('go-dongeng', () => Home);\n"]}]