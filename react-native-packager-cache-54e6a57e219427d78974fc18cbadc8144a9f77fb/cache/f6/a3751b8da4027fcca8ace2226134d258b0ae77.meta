["19dfd7f984e6a4a583dcb26a915abf4b24d66948","e6c44d9461b395d86796c3ba22fe40e6c8942176",["../utils/invariant"],[132],{"version":3,"sources":["/home/dhamaddam/AndroidStudioProjects/go-dongeng/node_modules/react-navigation/src/routers/getScreenForRouteName.js"],"names":["getScreenForRouteName","routeConfigs","routeName","routeConfig","Object","keys","map","a","join","screen","getScreen"],"mappings":";;;kBAawBA,qB;;AAXxB;;;;AAWe,SAASA,qBAAT,CACbC,YADa,EAEbC,SAFa,EAGQ;AACrB,MAAMC,cAAcF,aAAaC,SAAb,CAApB;;AAEA,2BACEC,WADF,EAEE,uCAAqCD,SAArC,iCACqBE,OAAOC,IAAP,CAAYJ,YAAZ,EAChBK,GADgB,CACZ,UAACC,CAAD;AAAA,kBAAmBA,CAAnB;AAAA,GADY,EAEhBC,IAFgB,CAEX,GAFW,CADrB,CAFF;;AAQA,MAAIL,YAAYM,MAAhB,EAAwB;AACtB,WAAON,YAAYM,MAAnB;AACD;;AAED,MAAI,OAAON,YAAYO,SAAnB,KAAiC,UAArC,EAAiD;AAC/C,QAAMD,SAASN,YAAYO,SAAZ,EAAf;AACA,6BACE,OAAOD,MAAP,KAAkB,UADpB,EAEE,uCAAoCP,SAApC,gCACE,0BADF,GAEE,6BAFF,IAGKA,SAHL,gEAFF;AAOA,WAAOO,MAAP;AACD;;AAED,2BAAU,KAAV,aAA0BP,SAA1B;AACD","sourcesContent":["/* @flow */\n\nimport invariant from '../utils/invariant';\n\nimport type {\n  NavigationComponent,\n  NavigationRouteConfigMap,\n} from '../TypeDefinition';\n\n/**\n * Simple helper that gets a single screen (React component or navigator)\n * out of the navigator config.\n */\nexport default function getScreenForRouteName( // eslint-disable-line consistent-return\n  routeConfigs: NavigationRouteConfigMap,\n  routeName: string\n): NavigationComponent {\n  const routeConfig = routeConfigs[routeName];\n\n  invariant(\n    routeConfig,\n    `There is no route defined for key ${routeName}.\\n` +\n      `Must be one of: ${Object.keys(routeConfigs)\n        .map((a: string) => `'${a}'`)\n        .join(',')}`\n  );\n\n  if (routeConfig.screen) {\n    return routeConfig.screen;\n  }\n\n  if (typeof routeConfig.getScreen === 'function') {\n    const screen = routeConfig.getScreen();\n    invariant(\n      typeof screen === 'function',\n      `The getScreen defined for route '${routeName} didn't return a valid ` +\n        'screen or navigator.\\n\\n' +\n        'Please pass it like this:\\n' +\n        `${routeName}: {\\n  getScreen: () => require('./MyScreen').default\\n}`\n    );\n    return screen;\n  }\n\n  invariant(false, `Route ${routeName} must define a screen or a getScreen.`);\n}\n"]}]