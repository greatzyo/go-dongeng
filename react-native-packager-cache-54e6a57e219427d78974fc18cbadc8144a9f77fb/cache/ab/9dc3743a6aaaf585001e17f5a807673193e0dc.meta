["6bc4866f3e35e252019ba3ad4b10367334a6c897","b79c213fabffcc9e483aa5d3a969837135fa249d",["react-native","react"],[112,151],{"version":3,"sources":["/home/dhamaddam/AndroidStudioProjects/go-dongeng/node_modules/rn-viewpager/viewpager/ViewPager.js"],"names":["SCROLLVIEW_REF","VIEWPAGER_REF","SCROLL_STATE","idle","settling","dragging","ViewPager","props","state","width","height","_scrollState","_preScrollX","_panResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderGrant","_setScrollState","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","onPanResponderTerminationRequest","evt","gestureState","_onPageScrollOnAndroid","bind","_onPageSelectedOnAndroid","_renderOnIOS","_onScrollOnIOS","_onScrollViewLayout","_childrenWithOverridenStyle","setPageWithoutAnimation","setPage","forceScrollView","OS","horizontalScroll","e","onPageScroll","nativeEvent","onPageSelected","childrenCount","children","length","initialPage","Math","min","max","needMonitorScroll","onPageScrollStateChanged","needMonitorTouch","ref","onLayout","horizontal","pagingEnabled","scrollsToTop","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","contentOffset","x","y","decelerationRate","onScroll","scrollEventThrottle","panHandlers","scrollViewStyle","overflow","marginHorizontal","pageMargin","style","offset","position","floor","event","layout","setState","Children","map","child","newProps","collapsable","type","displayName","console","warn","createElement","scrollState","selectedPage","refs","scrollTo","animated","propTypes","defaultProps","keyboardDismissMode"],"mappings":"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","sourcesContent":["/**\n * Created by tangzhibin on 16/2/28.\n */\n\n'use strict'\n\nimport { PanResponder, Platform, ScrollView, StyleSheet, View, ViewPagerAndroid } from 'react-native'\nimport React, { Component } from 'react'\n\nconst SCROLLVIEW_REF = 'scrollView'\nconst VIEWPAGER_REF = 'viewPager'\n\nconst SCROLL_STATE = {\n    idle: 'idle',\n    settling: 'settling',\n    dragging: 'dragging'\n}\nexport default class ViewPager extends Component {\n    static propTypes = {...ViewPagerAndroid.propTypes}\n\n    static defaultProps = {\n        initialPage: 0,\n        keyboardDismissMode: 'on-drag',\n        onPageScroll: null,\n        onPageSelected: null,\n        onPageScrollStateChanged: null,\n        pageMargin: 0\n    }\n\n    state = {width: 0, height: 0}\n\n    _scrollState = SCROLL_STATE.idle\n\n    _preScrollX = null\n\n    _panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: () => true,\n        onMoveShouldSetPanResponder: () => true,\n        onPanResponderGrant: () => this._setScrollState(SCROLL_STATE.dragging),\n        onPanResponderMove: () => null,\n        onPanResponderRelease: () => this._setScrollState(SCROLL_STATE.settling),\n        onPanResponderTerminate: () => null,\n        onPanResponderTerminationRequest: (evt, gestureState) => true\n    })\n\n    constructor (props) {\n        super(props)\n        this._onPageScrollOnAndroid = this._onPageScrollOnAndroid.bind(this)\n        this._onPageSelectedOnAndroid = this._onPageSelectedOnAndroid.bind(this)\n        this._renderOnIOS = this._renderOnIOS.bind(this)\n        this._onScrollOnIOS = this._onScrollOnIOS.bind(this)\n        this._onScrollViewLayout = this._onScrollViewLayout.bind(this)\n        this._childrenWithOverridenStyle = this._childrenWithOverridenStyle.bind(this)\n        this._setScrollState = this._setScrollState.bind(this)\n        this.setPageWithoutAnimation = this.setPageWithoutAnimation.bind(this)\n        this.setPage = this.setPage.bind(this)\n    }\n\n    render () {\n        return (this.props.forceScrollView || Platform.OS === 'ios') ? this._renderOnIOS() : (\n            <ViewPagerAndroid\n                {...this.props}\n                scrollEnabled={this.props.horizontalScroll ? true : false}\n                ref={VIEWPAGER_REF}\n                onPageScroll={this._onPageScrollOnAndroid}\n                onPageSelected={this._onPageSelectedOnAndroid}\n            />\n        )\n    }\n\n    _onPageScrollOnAndroid (e) {\n        if (this.props.onPageScroll) this.props.onPageScroll(e.nativeEvent)\n    }\n\n    _onPageSelectedOnAndroid (e) {\n        if (this.props.onPageSelected) this.props.onPageSelected(e.nativeEvent)\n    }\n\n    _renderOnIOS () {\n        let childrenCount = this.props.children ? this.props.children.length : 0\n        let initialPage = Math.min(Math.max(0, this.props.initialPage), childrenCount - 1)\n        let needMonitorScroll = !!this.props.onPageScroll || !!this.props.onPageSelected || !!this.props.onPageScrollStateChanged\n        let needMonitorTouch = !!this.props.onPageScrollStateChanged\n        let props = {\n            ...this.props,\n            ref: SCROLLVIEW_REF,\n            onLayout: this._onScrollViewLayout,\n            horizontal: true,\n            pagingEnabled: this.props.horizontalScroll ? true : false,\n            scrollsToTop: false,\n            showsHorizontalScrollIndicator: false,\n            showsVerticalScrollIndicator: false,\n            children: this._childrenWithOverridenStyle(),\n            contentOffset: {x: this.state.width * initialPage, y: 0},\n            decelerationRate: 0.9,\n            onScroll: needMonitorScroll ? this._onScrollOnIOS : null,\n            scrollEventThrottle: needMonitorScroll ? ( this.props.onPageScroll ? 8 : 1) : 0\n        }\n        if (needMonitorTouch) props = Object.assign(props, this._panResponder.panHandlers)\n        const scrollViewStyle = {\n            overflow: 'visible',\n            marginHorizontal: -this.props.pageMargin / 2\n        }\n        if (this.props.style && !this.props.style.height)\n            return <ScrollView {...props} style={[this.props.style, scrollViewStyle]} />\n        else return (\n            <View style={this.props.style} >\n                <ScrollView {...props} style={scrollViewStyle} />\n            </View>\n        )\n    }\n\n    _onScrollOnIOS (e) {\n        let {x} = e.nativeEvent.contentOffset, offset, position = Math.floor(x / this.state.width)\n        if (x === this._preScrollX) return\n        this._preScrollX = x\n        offset = x / this.state.width - position\n\n        if (this.props.onPageScroll) this.props.onPageScroll({offset, position})\n\n        if (this.props.onPageSelected && offset === 0) {\n            this.props.onPageSelected({position})\n            this.props.onPageScrollStateChanged && this._setScrollState(SCROLL_STATE.idle)\n        }\n    }\n\n    _onScrollViewLayout (event) {\n        let {width, height} = event.nativeEvent.layout\n        this.setState({width, height})\n    }\n\n    _childrenWithOverridenStyle () {\n        if (this.state.width === 0 || this.state.height === 0) return null\n        return React.Children.map(this.props.children, (child) => {\n            if (!child)return null\n            let newProps = {\n                ...child.props,\n                style: [child.props.style, {\n                    width: this.state.width,\n                    height: this.state.height,\n                    position: null\n                }],\n                collapsable: false\n            }\n            if (child.type &&\n                child.type.displayName &&\n                (child.type.displayName !== 'RCTView') &&\n                (child.type.displayName !== 'View')) {\n                console.warn('Each ViewPager child must be a <View>. Was ' + child.type.displayName)\n            }\n            return React.createElement(child.type, newProps)\n        })\n    }\n\n    _setScrollState (scrollState) {\n        if (scrollState === this._scrollState) return\n        this.props.onPageScrollStateChanged && this.props.onPageScrollStateChanged(scrollState)\n        this._scrollState = scrollState\n    }\n\n    setPageWithoutAnimation (selectedPage) {\n        if (this.props.forceScrollView || Platform.OS === 'ios')\n            this.refs[SCROLLVIEW_REF].scrollTo({x: this.state.width * selectedPage, animated: false})\n        else {\n            this.refs[VIEWPAGER_REF].setPageWithoutAnimation(selectedPage)\n            if (this.props.onPageSelected) this.props.onPageSelected({position: selectedPage})\n        }\n    }\n\n    setPage (selectedPage) {\n        if (this.props.forceScrollView || Platform.OS === 'ios') this.refs[SCROLLVIEW_REF].scrollTo({x: this.state.width * selectedPage})\n        else {\n            this.refs[VIEWPAGER_REF].setPage(selectedPage)\n            if (this.props.onPageSelected) this.props.onPageSelected({position: selectedPage})\n        }\n    }\n\n}\n"]}]