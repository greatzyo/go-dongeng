["642ef18b70f8f6ce5002f3e6845712b81477e605","a18bf9beed388ee6f8ef51c19453b8e2c655b086",["../utils/invariant"],[91],{"version":3,"sources":["/home/dhamaddam/AndroidStudioProjects/go-dongeng/node_modules/react-navigation/src/routers/validateRouteConfigMap.js"],"names":["validateRouteConfigMap","routeConfigs","routeNames","Object","keys","length","forEach","routeName","routeConfig","screen","getScreen"],"mappings":";;;;AAEA;;;;AAQA,SAASA,sBAAT,CAAgCC,YAAhC,EAAwE;AACtE,MAAMC,aAAaC,OAAOC,IAAP,CAAYH,YAAZ,CAAnB;AACA,2BACEC,WAAWG,MAAX,GAAoB,CADtB,EAEE,iEAFF;;AAKAH,aAAWI,OAAX,CAAmB,UAACC,SAAD,EAAuB;AACxC,QAAMC,cAAcP,aAAaM,SAAb,CAApB;;AAEA,6BACEC,YAAYC,MAAZ,IAAsBD,YAAYE,SADpC,EAEE,aAAUH,SAAV,oCACE,kBADF,GAEE,sCAFF,GAGE,OAHF,IAIKA,SAJL,cAKE,uBALF,GAME,GARJ;;AAWA,QAAIC,YAAYC,MAAZ,IAAsBD,YAAYE,SAAtC,EAAiD;AAC/C,+BACE,KADF,EAEE,aAAUH,SAAV,sCACE,wBAHJ;AAKD;;AAED,QAAIC,YAAYC,MAAhB,EAAwB;AACtB,+BACE,OAAOD,YAAYC,MAAnB,KAA8B,UADhC,EAEE,+BAA4BF,SAA5B,qBACE,mCADF,GAEE,sCAFF,GAGE,OAHF,IAIKA,SAJL,cAKE,uBALF,GAME,OANF,GAOE,mCAPF,GAQE,4CARF,GASE,OATF,IAUKA,SAVL,cAWE,0BAXF,GAYE,GAdJ;AAgBD;AACF,GAxCD;AAyCD;;kBAEcP,sB","sourcesContent":["/** @flow */\n\nimport invariant from '../utils/invariant';\n\nimport type { NavigationRouteConfigMap } from '../TypeDefinition';\n\n/**\n * Make sure the config passed e.g. to StackRouter, TabRouter has\n * the correct format, and throw a clear error if it doesn't.\n */\nfunction validateRouteConfigMap(routeConfigs: NavigationRouteConfigMap) {\n  const routeNames = Object.keys(routeConfigs);\n  invariant(\n    routeNames.length > 0,\n    'Please specify at least one route when configuring a navigator.'\n  );\n\n  routeNames.forEach((routeName: string) => {\n    const routeConfig = routeConfigs[routeName];\n\n    invariant(\n      routeConfig.screen || routeConfig.getScreen,\n      `Route '${routeName}' should declare a screen. ` +\n        'For example:\\n\\n' +\n        \"import MyScreen from './MyScreen';\\n\" +\n        '...\\n' +\n        `${routeName}: {\\n` +\n        '  screen: MyScreen,\\n' +\n        '}'\n    );\n\n    if (routeConfig.screen && routeConfig.getScreen) {\n      invariant(\n        false,\n        `Route '${routeName}' should declare a screen or ` +\n          'a getScreen, not both.'\n      );\n    }\n\n    if (routeConfig.screen) {\n      invariant(\n        typeof routeConfig.screen === 'function',\n        `The component for route '${routeName}' must be a ` +\n          'React component. For example:\\n\\n' +\n          \"import MyScreen from './MyScreen';\\n\" +\n          '...\\n' +\n          `${routeName}: {\\n` +\n          '  screen: MyScreen,\\n' +\n          '}\\n\\n' +\n          'You can also use a navigator:\\n\\n' +\n          \"import MyNavigator from './MyNavigator';\\n\" +\n          '...\\n' +\n          `${routeName}: {\\n` +\n          '  screen: MyNavigator,\\n' +\n          '}'\n      );\n    }\n  });\n}\n\nexport default validateRouteConfigMap;\n"]}]