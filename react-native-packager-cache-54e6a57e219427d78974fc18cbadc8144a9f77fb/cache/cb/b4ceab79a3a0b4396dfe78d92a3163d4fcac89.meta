["fc9cfe54d9c0db8ded01265faa1c69cd7d5bbfbc","082eadb566d92bafdf49b8b87f73069b78497231",["react","prop-types","react-native","./TabViewPropTypes"],[87,182,292,342],{"version":3,"sources":["/home/dhamaddam/AndroidStudioProjects/go-dongeng/node_modules/react-native-tab-view/src/TabViewPagerScroll.js"],"names":["TabViewPagerScroll","props","_nextOffset","_isIdle","_scrollTo","x","animated","animationEnabled","_scrollView","scrollTo","_handleMomentumScrollEnd","e","nextIndex","Math","round","nativeEvent","contentOffset","layout","width","jumpToIndex","_handleScroll","abs","position","setValue","_setRef","el","state","initialOffset","navigationState","index","y","_resetListener","subscribe","prevProps","amount","OS","global","requestAnimationFrame","remove","children","swipeEnabled","styles","container","map","child","i","routes","key","testID","overflow","page","propTypes","bool","node","create","flexGrow","flex"],"mappings":";;;;AAEA;;;;AACA;;;;AACA;;AACA;;IAsBqBA,kB;;;AAYnB,8BAAYC,KAAZ,EAA6B;AAAA;;AAAA,oJACrBA,KADqB;;AAAA,UA2C7BC,WA3C6B,GA2Cf,CA3Ce;AAAA,UA4C7BC,OA5C6B,GA4CV,IA5CU;;AAAA,UA8C7BC,SA9C6B,GA8CjB,UAACC,CAAD,EAAiE;AAAA,UAArDC,QAAqD,uEAA1C,MAAKL,KAAL,CAAWM,gBAAX,KAAgC,KAAU;;AAC3E,YAAKL,WAAL,GAAmBG,CAAnB;;AAEA,UAAI,MAAKF,OAAL,IAAgB,MAAKK,WAAzB,EAAsC;AACpC,cAAKA,WAAL,CAAiBC,QAAjB,CAA0B;AACxBJ,cADwB;AAExBC;AAFwB,SAA1B;AAID;AACF,KAvD4B;;AAAA,UAyD7BI,wBAzD6B,GAyDF,UAACC,CAAD,EAAoB;AAC7C,UAAMC,YAAYC,KAAKC,KAAL,CAChBH,EAAEI,WAAF,CAAcC,aAAd,CAA4BX,CAA5B,GAAgC,MAAKJ,KAAL,CAAWgB,MAAX,CAAkBC,KADlC,CAAlB;AAGA,YAAKf,OAAL,GAAe,IAAf;AACA,YAAKF,KAAL,CAAWkB,WAAX,CAAuBP,SAAvB;AACD,KA/D4B;;AAAA,UAiE7BQ,aAjE6B,GAiEb,UAACT,CAAD,EAAoB;AAClC,YAAKR,OAAL,GACEU,KAAKQ,GAAL,CAASV,EAAEI,WAAF,CAAcC,aAAd,CAA4BX,CAA5B,GAAgC,MAAKH,WAA9C,IAA6D,GAD/D;AAEA,YAAKD,KAAL,CAAWqB,QAAX,CAAoBC,QAApB,CACEZ,EAAEI,WAAF,CAAcC,aAAd,CAA4BX,CAA5B,GAAgC,MAAKJ,KAAL,CAAWgB,MAAX,CAAkBC,KADpD;AAGD,KAvE4B;;AAAA,UAyE7BM,OAzE6B,GAyEnB,UAACC,EAAD;AAAA,aAAiB,MAAKjB,WAAL,GAAmBiB,EAApC;AAAA,KAzEmB;;AAE3B,UAAKC,KAAL,GAAa;AACXC,qBAAe;AACbtB,WAAG,MAAKJ,KAAL,CAAW2B,eAAX,CAA2BC,KAA3B,GAAmC,MAAK5B,KAAL,CAAWgB,MAAX,CAAkBC,KAD3C;AAEbY,WAAG;AAFU;AADJ,KAAb;AAF2B;AAQ5B;;;;wCAImB;AAClB,WAAK1B,SAAL,CACE,KAAKH,KAAL,CAAW2B,eAAX,CAA2BC,KAA3B,GAAmC,KAAK5B,KAAL,CAAWgB,MAAX,CAAkBC,KADvD,EAEE,KAFF;AAIA,WAAKa,cAAL,GAAsB,KAAK9B,KAAL,CAAW+B,SAAX,CAAqB,OAArB,EAA8B,KAAK5B,SAAnC,CAAtB;AACD;;;uCAEkB6B,S,EAAqB;AAAA;;AACtC,UAAMC,SAAS,KAAKjC,KAAL,CAAW2B,eAAX,CAA2BC,KAA3B,GAAmC,KAAK5B,KAAL,CAAWgB,MAAX,CAAkBC,KAApE;AACA,UACEe,UAAUL,eAAV,KAA8B,KAAK3B,KAAL,CAAW2B,eAAzC,IACAK,UAAUhB,MAAV,KAAqB,KAAKhB,KAAL,CAAWgB,MAFlC,EAGE;AACA,YACE,sBAASkB,EAAT,KAAgB,SAAhB,IACAF,UAAUL,eAAV,KAA8B,KAAK3B,KAAL,CAAW2B,eAF3C,EAGE;AACAQ,iBAAOC,qBAAP,CAA6B;AAAA,mBAAM,OAAKjC,SAAL,CAAe8B,MAAf,CAAN;AAAA,WAA7B;AACD,SALD,MAKO;AACL,eAAK9B,SAAL,CAAe8B,MAAf,EAAuB,KAAvB;AACD;AACF;AACF;;;2CAEsB;AACrB,WAAKH,cAAL,CAAoBO,MAApB;AACD;;;6BAoCQ;AAAA,mBACuC,KAAKrC,KAD5C;AAAA,UACCsC,QADD,UACCA,QADD;AAAA,UACWtB,MADX,UACWA,MADX;AAAA,UACmBW,eADnB,UACmBA,eADnB;;AAEP,aACE;AAAA;AAAA;AACE,0BADF;AAEE,6BAFF;AAGE,sCAHF;AAIE,+BAAoB,SAJtB;AAKE,qCAA0B,QAL5B;AAME,yBAAe,KAAK3B,KAAL,CAAWuC,YAN5B;AAOE,4CAAkC,KAPpC;AAQE,mBAAS,KARX;AASE,kCAAwB,KAT1B;AAUE,wBAAc,KAVhB;AAWE,0CAAgC,KAXlC;AAYE,+BAAqB,EAZvB;AAaE,oBAAU,KAAKpB,aAbjB;AAcE,+BAAqB,KAAKV,wBAd5B;AAeE,yBAAe,KAAKgB,KAAL,CAAWC,aAf5B;AAgBE,iBAAOc,OAAOC,SAhBhB;AAiBE,iCAAuBzB,OAAOC,KAAP,GAAe,IAAf,GAAsBuB,OAAOC,SAjBtD;AAkBE,eAAK,KAAKlB;AAlBZ;AAoBG,wBAASmB,GAAT,CAAaJ,QAAb,EAAuB,UAACK,KAAD,EAAQC,CAAR;AAAA,iBACtB;AAAA;AAAA;AACE,mBAAKjB,gBAAgBkB,MAAhB,CAAuBD,CAAvB,EAA0BE,GADjC;AAEE,sBAAQnB,gBAAgBkB,MAAhB,CAAuBD,CAAvB,EAA0BG,MAFpC;AAGE,qBACE/B,OAAOC,KAAP,GACI,EAAEA,OAAOD,OAAOC,KAAhB,EAAuB+B,UAAU,QAAjC,EADJ,GAEIJ,MAAMjB,gBAAgBC,KAAtB,GAA8BY,OAAOS,IAArC,GAA4C;AANpD;AASGL,kBAAMjB,gBAAgBC,KAAtB,IAA+BZ,OAAOC,KAAtC,GAA8C0B,KAA9C,GAAsD;AATzD,WADsB;AAAA,SAAvB;AApBH,OADF;AAoCD;;;;;AA7HkB5C,kB,CAKZmD,S;AAEL5C,oBAAkB,oBAAU6C,I;AAC5BZ,gBAAc,oBAAUY,I;AACxBb,YAAU,oBAAUc;;kBATHrD,kB;;;AAgIrB,IAAMyC,SAAS,wBAAWa,MAAX,CAAkB;AAC/BZ,aAAW;AACTa,cAAU;AADD,GADoB;;AAK/BL,QAAM;AACJM,UAAM,CADF;AAEJP,cAAU;AAFN;AALyB,CAAlB,CAAf","sourcesContent":["/* @flow */\n\nimport React, { PureComponent, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { Platform, View, ScrollView, StyleSheet } from 'react-native';\nimport { SceneRendererPropType } from './TabViewPropTypes';\nimport type { SceneRendererProps, Route } from './TabViewTypeDefinitions';\n\ntype ScrollEvent = {\n  nativeEvent: {\n    contentOffset: {\n      x: number,\n      y: number,\n    },\n  },\n};\n\ntype State = {\n  initialOffset: { x: number, y: number },\n};\n\ntype Props<T> = SceneRendererProps<T> & {\n  animationEnabled?: boolean,\n  swipeEnabled?: boolean,\n  children?: React.Element<any>,\n};\n\nexport default class TabViewPagerScroll<T: Route<*>> extends PureComponent<\n  void,\n  Props<T>,\n  State\n> {\n  static propTypes = {\n    ...SceneRendererPropType,\n    animationEnabled: PropTypes.bool,\n    swipeEnabled: PropTypes.bool,\n    children: PropTypes.node,\n  };\n\n  constructor(props: Props<T>) {\n    super(props);\n    this.state = {\n      initialOffset: {\n        x: this.props.navigationState.index * this.props.layout.width,\n        y: 0,\n      },\n    };\n  }\n\n  state: State;\n\n  componentDidMount() {\n    this._scrollTo(\n      this.props.navigationState.index * this.props.layout.width,\n      false\n    );\n    this._resetListener = this.props.subscribe('reset', this._scrollTo);\n  }\n\n  componentDidUpdate(prevProps: Props<T>) {\n    const amount = this.props.navigationState.index * this.props.layout.width;\n    if (\n      prevProps.navigationState !== this.props.navigationState ||\n      prevProps.layout !== this.props.layout\n    ) {\n      if (\n        Platform.OS === 'android' ||\n        prevProps.navigationState !== this.props.navigationState\n      ) {\n        global.requestAnimationFrame(() => this._scrollTo(amount));\n      } else {\n        this._scrollTo(amount, false);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this._resetListener.remove();\n  }\n\n  _resetListener: Object;\n  _scrollView: Object;\n  _nextOffset = 0;\n  _isIdle: boolean = true;\n\n  _scrollTo = (x: number, animated = this.props.animationEnabled !== false) => {\n    this._nextOffset = x;\n\n    if (this._isIdle && this._scrollView) {\n      this._scrollView.scrollTo({\n        x,\n        animated,\n      });\n    }\n  };\n\n  _handleMomentumScrollEnd = (e: ScrollEvent) => {\n    const nextIndex = Math.round(\n      e.nativeEvent.contentOffset.x / this.props.layout.width\n    );\n    this._isIdle = true;\n    this.props.jumpToIndex(nextIndex);\n  };\n\n  _handleScroll = (e: ScrollEvent) => {\n    this._isIdle =\n      Math.abs(e.nativeEvent.contentOffset.x - this._nextOffset) < 0.1;\n    this.props.position.setValue(\n      e.nativeEvent.contentOffset.x / this.props.layout.width\n    );\n  };\n\n  _setRef = (el: Object) => (this._scrollView = el);\n\n  render() {\n    const { children, layout, navigationState } = this.props;\n    return (\n      <ScrollView\n        horizontal\n        pagingEnabled\n        directionalLockEnabled\n        keyboardDismissMode=\"on-drag\"\n        keyboardShouldPersistTaps=\"always\"\n        scrollEnabled={this.props.swipeEnabled}\n        automaticallyAdjustContentInsets={false}\n        bounces={false}\n        alwaysBounceHorizontal={false}\n        scrollsToTop={false}\n        showsHorizontalScrollIndicator={false}\n        scrollEventThrottle={16}\n        onScroll={this._handleScroll}\n        onMomentumScrollEnd={this._handleMomentumScrollEnd}\n        contentOffset={this.state.initialOffset}\n        style={styles.container}\n        contentContainerStyle={layout.width ? null : styles.container}\n        ref={this._setRef}\n      >\n        {Children.map(children, (child, i) =>\n          <View\n            key={navigationState.routes[i].key}\n            testID={navigationState.routes[i].testID}\n            style={\n              layout.width\n                ? { width: layout.width, overflow: 'hidden' }\n                : i === navigationState.index ? styles.page : null\n            }\n          >\n            {i === navigationState.index || layout.width ? child : null}\n          </View>\n        )}\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n  },\n\n  page: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"]}]