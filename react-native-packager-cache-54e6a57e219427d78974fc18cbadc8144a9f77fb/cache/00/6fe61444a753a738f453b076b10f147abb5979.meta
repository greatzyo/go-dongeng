["fadff289edee858be77adf82d75af7c3918d442d","89d13ca8b861b3cb165b3b84535275688ea8c43d",["react","prop-types","react-native","../IndicatorViewPager"],[106,201,311,363],{"version":3,"sources":["/home/dhamaddam/AndroidStudioProjects/go-dongeng/node_modules/rn-viewpager/viewpager/indicator/PagerTitleIndicator.js"],"names":["PagerTitleIndicator","state","selectedIndex","props","initialPage","nextProps","nextState","titles","style","itemStyle","itemTextStyle","selectedItemTextStyle","selectedBorderStyle","pager","selectedItemStyle","length","titleViews","map","title","index","isSelected","titleView","renderTitle","styles","titleTextSelected","titleText","titleContainer","setPage","selectedBorder","indicatorContainer","e","setState","position","propTypes","number","instanceOf","arrayOf","string","isRequired","func","defaultProps","create","height","flexDirection","backgroundColor","color","fontSize","flex","alignItems","justifyContent","bottom","left","right"],"mappings":"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","sourcesContent":["/**\n * Created by tangzhibin on 16/2/28.\n */\n\n'use strict'\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { StyleSheet, View, Text, TouchableOpacity } from 'react-native'\nimport IndicatorViewPager from '../IndicatorViewPager'\n\nexport default class PagerTitleIndicator extends Component {\n    static propTypes = {\n        ...View.propTypes,\n        initialPage: PropTypes.number,\n        pager: PropTypes.instanceOf(IndicatorViewPager),\n        titles: PropTypes.arrayOf(PropTypes.string).isRequired,\n        itemStyle: View.propTypes.style,\n        selectedItemStyle: View.propTypes.style,\n        itemTextStyle: Text.propTypes.style,\n        selectedItemTextStyle: Text.propTypes.style,\n        selectedBorderStyle: View.propTypes.style,\n        renderTitle: PropTypes.func\n    }\n\n    static defaultProps = {\n        titles: [],\n        initialPage: 0\n    }\n\n    state = {\n        selectedIndex: this.props.initialPage\n    }\n\n    shouldComponentUpdate (nextProps, nextState) {\n        return this.state.selectedIndex != nextState.selectedIndex ||\n            this.props.titles + '' != nextProps.titles + '' ||\n            this.props.style != nextProps.style ||\n            this.props.itemStyle != nextProps.itemStyle ||\n            this.props.itemTextStyle != nextProps.itemTextStyle ||\n            this.props.selectedItemTextStyle != nextProps.selectedItemTextStyle ||\n            this.props.selectedBorderStyle != nextProps.selectedBorderStyle\n    }\n\n    render () {\n        let {titles, pager, itemStyle, selectedItemStyle, itemTextStyle, selectedItemTextStyle, selectedBorderStyle} = this.props\n        if (!titles || titles.length === 0)return null\n\n        let titleViews = titles.map((title, index) => {\n            let isSelected = this.state.selectedIndex === index\n\n            const titleView = this.props.renderTitle ? this.props.renderTitle(index, title, isSelected) : (\n                <Text style={isSelected ? [styles.titleTextSelected, selectedItemTextStyle] : [styles.titleText, itemTextStyle]} >\n                    {title}\n                </Text>\n            )\n\n            return (\n                <TouchableOpacity\n                    style={[styles.titleContainer, isSelected ? selectedItemStyle : itemStyle]}\n                    activeOpacity={0.6}\n                    key={index}\n                    onPress={() => {!isSelected && pager.setPage(index)}}\n                >\n                    {titleView}\n                    {isSelected ? <View style={[styles.selectedBorder, selectedBorderStyle]} /> : null}\n                </TouchableOpacity>\n            )\n        })\n        return (\n            <View style={[styles.indicatorContainer, this.props.style]} >\n                {titleViews}\n            </View>\n        )\n    }\n\n    onPageSelected (e) {\n        this.setState({selectedIndex: e.position})\n    }\n}\n\nconst styles = StyleSheet.create({\n    indicatorContainer: {\n        height: 40,\n        flexDirection: 'row',\n        backgroundColor: '#F6F6F6'\n    },\n    titleText: {\n        color: '#333333',\n        fontSize: 15\n    },\n    titleTextSelected: {\n        color: '#FF7200',\n        fontSize: 15\n    },\n    titleContainer: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    selectedBorder: {\n        backgroundColor: '#FF7200',\n        height: 2,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0\n    }\n})\n"]}]