["379c853a8e27734d36752e6b876363660ef3dbc8","f5241d9e5926cd534325db62d7711d399bb50b99",["react","./addNavigationHelpers"],[132,238],{"version":3,"sources":["/home/dhamaddam/AndroidStudioProjects/go-dongeng/node_modules/react-navigation/src/withCachedChildNavigation.js"],"names":["withCachedChildNavigation","Comp","_updateNavigationProps","navigation","_childNavigationProps","state","routes","forEach","route","childNavigation","key","props","nextProps","displayName","name"],"mappings":";;;kBAiBwBA,yB;;AAfxB;;;;AAEA;;;;AAae,SAASA,yBAAT,CACbC,IADa,EAEE;AAAA;;AACf;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA,oMAkBEC,sBAlBF,GAkB2B,UACvBC,UADuB,EAEpB;AAEH,YAAI,CAAC,MAAKC,qBAAV,EAAiC;AAC/B,gBAAKA,qBAAL,GAA6B,EAA7B;AACD;AACDD,mBAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,OAAxB,CAAgC,UAACC,KAAD,EAAc;AAC5C,cAAMC,kBAAkB,MAAKL,qBAAL,CAA2BI,MAAME,GAAjC,CAAxB;AACA,cAAID,mBAAmBA,gBAAgBJ,KAAhB,KAA0BG,KAAjD,EAAwD;AACtD;AACD;AACD,gBAAKJ,qBAAL,CAA2BI,MAAME,GAAjC,IAAwC,6DACnCP,UADmC;AAEtCE,mBAAOG;AAF+B,aAAxC;AAID,SATD;AAUD,OAnCH;AAAA;;AAAA;AAAA;AAAA,2CAMuB;AACnB,aAAKN,sBAAL,CAA4B,KAAKS,KAAL,CAAWR,UAAvC;AACD;AARH;AAAA;AAAA,gDAU4BS,SAV5B,EAU0C;AACtC,aAAKV,sBAAL,CAA4BU,UAAUT,UAAtC;AACD;AAZH;AAAA;AAAA,+BAqCW;AACP,eACE,8BAAC,IAAD,2BACM,KAAKQ,KADX;AAEE,gCAAsB,KAAKP;AAF7B,WADF;AAMD;AA5CH;AAAA;AAAA,kCACSS,WADT,mCACoDZ,KAAKY,WAAL,IAChDZ,KAAKa,IAFT;AA8CD","sourcesContent":["/* @flow */\n\nimport React, { PureComponent } from 'react';\n\nimport addNavigationHelpers from './addNavigationHelpers';\n\nimport type { NavigationScreenProp, NavigationAction } from './TypeDefinition';\n\ntype InjectedProps<N> = {\n  childNavigationProps: {\n    [key: string]: N,\n  },\n};\n\n/**\n * HOC which caches the child navigation items.\n */\nexport default function withCachedChildNavigation<T: *, N: *>(\n  Comp: ReactClass<T & InjectedProps<N>>\n): ReactClass<T> {\n  return class extends PureComponent {\n    static displayName = `withCachedChildNavigation(${Comp.displayName ||\n      Comp.name})`;\n\n    props: T;\n\n    componentWillMount() {\n      this._updateNavigationProps(this.props.navigation);\n    }\n\n    componentWillReceiveProps(nextProps: T) {\n      this._updateNavigationProps(nextProps.navigation);\n    }\n\n    _childNavigationProps: {\n      [key: string]: NavigationScreenProp<N, NavigationAction>,\n    };\n\n    _updateNavigationProps = (\n      navigation: NavigationScreenProp<N, NavigationAction>\n    ) => {\n      // Update props for each child route\n      if (!this._childNavigationProps) {\n        this._childNavigationProps = {};\n      }\n      navigation.state.routes.forEach((route: *) => {\n        const childNavigation = this._childNavigationProps[route.key];\n        if (childNavigation && childNavigation.state === route) {\n          return;\n        }\n        this._childNavigationProps[route.key] = addNavigationHelpers({\n          ...navigation,\n          state: route,\n        });\n      });\n    };\n\n    render() {\n      return (\n        <Comp\n          {...this.props}\n          childNavigationProps={this._childNavigationProps}\n        />\n      );\n    }\n  };\n}\n"]}]