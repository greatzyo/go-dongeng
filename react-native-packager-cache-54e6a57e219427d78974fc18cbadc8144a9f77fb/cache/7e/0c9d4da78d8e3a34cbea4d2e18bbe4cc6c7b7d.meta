["89195ff0c5d8fe5a2952540adf97377d0a99f584","76ad1c3baf1902e7e551c2d85f0ecc4c754bd4fe",["react","prop-types","react-native"],[87,182,292],{"version":3,"sources":["/home/dhamaddam/AndroidStudioProjects/go-dongeng/node_modules/react-native-tab-view/src/TouchableItem.js"],"names":["LOLLIPOP","TouchableItem","_handlePress","global","requestAnimationFrame","props","onPress","style","pressOpacity","pressColor","borderless","rest","OS","Version","Ripple","only","children","propTypes","func","isRequired","delayPressIn","number","bool","string","node","defaultProps"],"mappings":";;;;AAEA;;;;AACA;;;;AACA;;AAQA,IAAMA,WAAW,EAAjB;;IAgBqBC,a;;;;;;;;;;;;;;gNAkBnBC,Y,GAAe,YAAM;AACnBC,aAAOC,qBAAP,CAA6B,MAAKC,KAAL,CAAWC,OAAxC;AACD,K;;;;;6BAEQ;AAAA,mBAE0D,KAAKD,KAF/D;AAAA,UAECE,KAFD,UAECA,KAFD;AAAA,UAEQC,YAFR,UAEQA,YAFR;AAAA,UAEsBC,UAFtB,UAEsBA,UAFtB;AAAA,UAEkCC,UAFlC,UAEkCA,UAFlC;AAAA,UAEiDC,IAFjD;;;AAIP,UAAI,sBAASC,EAAT,KAAgB,SAAhB,IAA6B,sBAASC,OAAT,IAAoBb,QAArD,EAA+D;AAC7D,eACE;AAAA;AAAA,mCACMW,IADN;AAEE,qBAAS,KAAKT,YAFhB;AAGE,wBAAY,qCAAwBY,MAAxB,CAA+BL,UAA/B,EAA2CC,UAA3C;AAHd;AAKE;AAAA;AAAA,cAAM,OAAOH,KAAb;AACG,4BAASQ,IAAT,CAAc,KAAKV,KAAL,CAAWW,QAAzB;AADH;AALF,SADF;AAWD,OAZD,MAYO;AACL,eACE;AAAA;AAAA,mCACML,IADN;AAEE,qBAAS,KAAKT,YAFhB;AAGE,mBAAOK,KAHT;AAIE,2BAAeC;AAJjB;AAMG,eAAKH,KAAL,CAAWW;AANd,SADF;AAUD;AACF;;;;;AAlDkBf,a,CAKZgB,S,GAAY;AACjBX,WAAS,oBAAUY,IAAV,CAAeC,UADP;AAEjBC,gBAAc,oBAAUC,MAFP;AAGjBX,cAAY,oBAAUY,IAHL;AAIjBb,cAAY,oBAAUc,MAJL;AAKjBf,gBAAc,oBAAUa,MALP;AAMjBL,YAAU,oBAAUQ,IAAV,CAAeL;AANR,C;AALAlB,a,CAcZwB,Y,GAAe;AACpBhB,cAAY;AADQ,C;kBAdHR,a","sourcesContent":["/* @flow */\n\nimport React, { PureComponent, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  Platform,\n  View,\n} from 'react-native';\nimport type { Style } from './TabViewTypeDefinitions';\n\nconst LOLLIPOP = 21;\n\ntype Props = {\n  onPress: Function,\n  delayPressIn?: number,\n  borderless?: boolean,\n  pressColor?: string,\n  pressOpacity?: number,\n  children?: React.Element<any>,\n  style?: Style,\n};\n\ntype DefaultProps = {\n  pressColor: string,\n};\n\nexport default class TouchableItem extends PureComponent<\n  DefaultProps,\n  Props,\n  void\n> {\n  static propTypes = {\n    onPress: PropTypes.func.isRequired,\n    delayPressIn: PropTypes.number,\n    borderless: PropTypes.bool,\n    pressColor: PropTypes.string,\n    pressOpacity: PropTypes.number,\n    children: PropTypes.node.isRequired,\n  };\n\n  static defaultProps = {\n    pressColor: 'rgba(255, 255, 255, .4)',\n  };\n\n  _handlePress = () => {\n    global.requestAnimationFrame(this.props.onPress);\n  };\n\n  render() {\n    // eslint-disable-next-line react/prop-types\n    const { style, pressOpacity, pressColor, borderless, ...rest } = this.props;\n\n    if (Platform.OS === 'android' && Platform.Version >= LOLLIPOP) {\n      return (\n        <TouchableNativeFeedback\n          {...rest}\n          onPress={this._handlePress}\n          background={TouchableNativeFeedback.Ripple(pressColor, borderless)}\n        >\n          <View style={style}>\n            {Children.only(this.props.children)}\n          </View>\n        </TouchableNativeFeedback>\n      );\n    } else {\n      return (\n        <TouchableOpacity\n          {...rest}\n          onPress={this._handlePress}\n          style={style}\n          activeOpacity={pressOpacity}\n        >\n          {this.props.children}\n        </TouchableOpacity>\n      );\n    }\n  }\n}\n"]}]