'use strict';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var ViewPager = require('react-native-viewpager');

var deviceWidth = _reactNative.Dimensions.get('window').width;

var PAGES = ['Page 0', 'Page 1', 'Page 2', 'Page 3', 'Page 4'];

function notifyMessage(msg) {
  if (_reactNative.Platform.OS === 'android') {
    _reactNative.ToastAndroid.show(msg, _reactNative.ToastAndroid.SHORT);
  } else {
    _reactNative.AlertIOS.alert(msg);
  }
}

var ImagesScreen = _react2.default.createClass({
  displayName: 'ImagesScreen',

  getInitialState: function getInitialState() {
    var dataSource = new ViewPager.DataSource({
      pageHasChanged: function pageHasChanged(p1, p2) {
        return p1 !== p2;
      }
    });

    return {
      dataSource: dataSource.cloneWithPages(PAGES)
    };
  },

  render: function render() {
    return _react2.default.createElement(ViewPager, {
      style: this.props.style,
      dataSource: this.state.dataSource,
      renderPage: this._renderPage,
      onChangePage: this._onChangePage,
      isLoop: false,
      autoPlay: false });
  },

  _renderPage: function _renderPage(data, pageID) {
    return _react2.default.createElement(
      _reactNative.View,
      { style: styles.page },
      _react2.default.createElement(
        _reactNative.Text,
        { style: styles.text },
        data
      )
    );
  },

  _onChangePage: function _onChangePage(page) {
    notifyMessage('Current page: ' + page);
  }

});

var styles = _reactNative.StyleSheet.create({
  page: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F5FCFF'
  },
  text: {
    fontSize: 20,
    textAlign: 'center'
  }
});

module.exports = ImagesScreen;