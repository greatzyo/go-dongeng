["595fe8bf0ea10ec253d89671b81b1647e2a5ed9e","88adbfab4c9b93baa980ec5bd208b6312792105c",["react","react-native","./createNavigator","../createNavigationContainer","../routers/TabRouter","../views/Drawer/DrawerScreen","../views/Drawer/DrawerView","../views/Drawer/DrawerNavigatorItems","./NavigatorTypes"],[87,184,233,376,534,655,788,925,1086],{"version":3,"sources":["/home/dhamaddam/AndroidStudioProjects/go-dongeng/node_modules/react-navigation/src/navigators/DrawerNavigator.js"],"names":["DefaultDrawerConfig","drawerWidth","get","width","OS","contentComponent","drawerPosition","useNativeAnimations","DrawerNavigator","routeConfigs","config","mergedConfig","containerConfig","drawerLockMode","contentOptions","tabsConfig","contentRouter","drawerRouter","DrawerClose","screen","DRAWER","props","DrawerOpen","DrawerToggle","initialRouteName","navigator"],"mappings":";;;;AAEA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAaA,IAAMA,sBAAsB;AAK1BC,eACE,wBAAWC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,IAAkC,sBAASC,EAAT,KAAgB,SAAhB,GAA4B,EAA5B,GAAiC,EAAnE,CANwB;AAO1BC,kDAP0B;AAQ1BC,kBAAgB,MARU;AAS1BC,uBAAqB;AATK,CAA5B;;AAYA,IAAMC,kBAAkB,SAAlBA,eAAkB,CACtBC,YADsB,EAGnB;AAAA,MADHC,MACG,uEAD6B,EAC7B;;AACH,MAAMC,wCAAoBX,mBAApB,EAA4CU,MAA5C,CAAN;AADG,MAGDE,eAHC,GAWCD,YAXD,CAGDC,eAHC;AAAA,MAIDX,WAJC,GAWCU,YAXD,CAIDV,WAJC;AAAA,MAKDY,cALC,GAWCF,YAXD,CAKDE,cALC;AAAA,MAMDR,gBANC,GAWCM,YAXD,CAMDN,gBANC;AAAA,MAODS,cAPC,GAWCH,YAXD,CAODG,cAPC;AAAA,MAQDR,cARC,GAWCK,YAXD,CAQDL,cARC;AAAA,MASDC,mBATC,GAWCI,YAXD,CASDJ,mBATC;AAAA,MAUEQ,UAVF,wCAWCJ,YAXD;;;AAaH,MAAMK,gBAAgB,yBAAUP,YAAV,EAAwBM,UAAxB,CAAtB;;AAEA,MAAME,eAAe,yBACnB;AACEC,iBAAa;AACXC,cAAQ,+BACNH,aADM,EAENP,YAFM,EAGNC,MAHM,EAIN,yBAAeU,MAJT,EAKN,UAACC,KAAD;AAAA,eAAc,sDAAkBA,KAAlB,CAAd;AAAA,OALM;AADG,KADf;AASEC,gBAAY;AACVH,cAAQ;AAAA,eAAM,IAAN;AAAA;AADE,KATd;AAYEI,kBAAc;AACZJ,cAAQ;AAAA,eAAM,IAAN;AAAA;AADI;AAZhB,GADmB,EAiBnB;AACEK,sBAAkB;AADpB,GAjBmB,CAArB;;AAsBA,MAAMC,YAAY,+BAChBR,YADgB,EAEhBR,YAFgB,EAGhBC,MAHgB,EAIhB,yBAAeU,MAJC,EAKhB,UAACC,KAAD;AAAA,WACA,6EACMA,KADN;AAEE,sBAAgBR,cAFlB;AAGE,2BAAqBN,mBAHvB;AAIE,mBAAaN,WAJf;AAKE,wBAAkBI,gBALpB;AAME,sBAAgBS,cANlB;AAOE,sBAAgBR;AAPlB,OADA;AAAA,GALgB,CAAlB;;AAiBA,SAAO,yCAA0BmB,SAA1B,CAAP;AACD,CA1DD;;kBA4DejB,e","sourcesContent":["/* @flow */\n\nimport React from 'react';\nimport { Dimensions, Platform } from 'react-native';\n\nimport createNavigator from './createNavigator';\nimport createNavigationContainer from '../createNavigationContainer';\nimport TabRouter from '../routers/TabRouter';\nimport DrawerScreen from '../views/Drawer/DrawerScreen';\nimport DrawerView from '../views/Drawer/DrawerView';\nimport DrawerItems from '../views/Drawer/DrawerNavigatorItems';\n\nimport NavigatorTypes from './NavigatorTypes';\n\nimport type { DrawerViewConfig } from '../views/Drawer/DrawerView';\nimport type {\n  NavigationRouteConfigMap,\n  NavigationTabRouterConfig,\n} from '../TypeDefinition';\n\nexport type DrawerNavigatorConfig = {\n  containerConfig?: void,\n} & NavigationTabRouterConfig &\n  DrawerViewConfig;\n\nconst DefaultDrawerConfig = {\n  /*\n   * Default drawer width is screen width - header width\n   * https://material.io/guidelines/patterns/navigation-drawer.html\n   */\n  drawerWidth:\n    Dimensions.get('window').width - (Platform.OS === 'android' ? 56 : 64),\n  contentComponent: DrawerItems,\n  drawerPosition: 'left',\n  useNativeAnimations: true,\n};\n\nconst DrawerNavigator = (\n  routeConfigs: NavigationRouteConfigMap,\n  config: DrawerNavigatorConfig = {}\n) => {\n  const mergedConfig = { ...DefaultDrawerConfig, ...config };\n  const {\n    containerConfig,\n    drawerWidth,\n    drawerLockMode,\n    contentComponent,\n    contentOptions,\n    drawerPosition,\n    useNativeAnimations,\n    ...tabsConfig\n  } = mergedConfig;\n\n  const contentRouter = TabRouter(routeConfigs, tabsConfig);\n\n  const drawerRouter = TabRouter(\n    {\n      DrawerClose: {\n        screen: createNavigator(\n          contentRouter,\n          routeConfigs,\n          config,\n          NavigatorTypes.DRAWER\n        )((props: *) => <DrawerScreen {...props} />),\n      },\n      DrawerOpen: {\n        screen: () => null,\n      },\n      DrawerToggle: {\n        screen: () => null,\n      },\n    },\n    {\n      initialRouteName: 'DrawerClose',\n    }\n  );\n\n  const navigator = createNavigator(\n    drawerRouter,\n    routeConfigs,\n    config,\n    NavigatorTypes.DRAWER\n  )((props: *) => (\n    <DrawerView\n      {...props}\n      drawerLockMode={drawerLockMode}\n      useNativeAnimations={useNativeAnimations}\n      drawerWidth={drawerWidth}\n      contentComponent={contentComponent}\n      contentOptions={contentOptions}\n      drawerPosition={drawerPosition}\n    />\n  ));\n\n  return createNavigationContainer(navigator);\n};\n\nexport default DrawerNavigator;\n"]}]