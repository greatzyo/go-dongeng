["16d2468818eb26d937cc2cfd478839e08298ab81","fef8bdc7a8a9c18e01da937da9aa319b021e3264",["react","react-native","./HeaderTitle","./HeaderBackButton","./HeaderStyleInterpolator"],[130,227,272,394,538],{"version":3,"sources":["/home/dhamaddam/AndroidStudioProjects/go-dongeng/node_modules/react-navigation/src/views/Header/Header.js"],"names":["APPBAR_HEIGHT","OS","STATUSBAR_HEIGHT","TITLE_OFFSET","Header","state","widths","_navigateBack","props","navigation","goBack","_renderTitleComponent","details","getScreenDetails","scene","headerTitle","options","titleString","_getHeaderTitleString","titleStyle","headerTitleStyle","color","headerTintColor","onLayoutIOS","e","setState","key","nativeEvent","layout","width","undefined","_renderLeftComponent","headerLeft","index","backButtonTitle","_getBackButtonTitleString","truncatedBackButtonTitle","_getTruncatedBackButtonTitle","initWidth","headerPressColorAndroid","headerBackTitleStyle","_renderRightComponent","headerRight","sceneOptions","title","scenes","find","s","lastScene","_getLastScene","headerBackTitle","headerTruncatedBackTitle","_renderSubView","forLeft","style","hasLeftComponent","left","hasRightComponent","right","forCenter","forRight","name","renderer","styleInterpolator","isStale","offset","Math","abs","subView","pointerEvents","styles","item","_renderLeft","_renderRight","_renderTitle","absoluteFill","header","appBar","mode","scenesProps","map","position","progress","_renderHeader","Value","screenProps","rest","headerStyle","container","PureComponent","HEIGHT","platformContainerStyles","borderBottomWidth","hairlineWidth","borderBottomColor","shadowColor","shadowOpacity","shadowRadius","shadowOffset","height","elevation","create","paddingTop","backgroundColor","flex","flexDirection","justifyContent","alignItems","bottom","top"],"mappings":"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","sourcesContent":["/* @flow */\n\n'no babel-plugin-flow-react-proptypes';\n\nimport React from 'react';\n\nimport { Animated, Platform, StyleSheet, View } from 'react-native';\n\nimport HeaderTitle from './HeaderTitle';\nimport HeaderBackButton from './HeaderBackButton';\nimport HeaderStyleInterpolator from './HeaderStyleInterpolator';\n\nimport type {\n  NavigationScene,\n  NavigationStyleInterpolator,\n  LayoutEvent,\n  HeaderProps,\n} from '../../TypeDefinition';\n\ntype SceneProps = {\n  scene: NavigationScene,\n  position: Animated.Value,\n  progress: Animated.Value,\n};\n\ntype SubViewRenderer<T> = (props: SceneProps) => ?React.Element<T>;\n\ntype SubViewName = 'left' | 'title' | 'right';\n\ntype HeaderState = {\n  widths: {\n    [key: string]: number,\n  },\n};\n\nconst APPBAR_HEIGHT = Platform.OS === 'ios' ? 44 : 56;\nconst STATUSBAR_HEIGHT = Platform.OS === 'ios' ? 20 : 0;\nconst TITLE_OFFSET = Platform.OS === 'ios' ? 70 : 56;\n\nclass Header extends React.PureComponent<void, HeaderProps, HeaderState> {\n  static HEIGHT = APPBAR_HEIGHT + STATUSBAR_HEIGHT;\n\n  state = {\n    widths: {},\n  };\n\n  _getHeaderTitleString(scene: NavigationScene): ?string {\n    const sceneOptions = this.props.getScreenDetails(scene).options;\n    if (typeof sceneOptions.headerTitle === 'string') {\n      return sceneOptions.headerTitle;\n    }\n    return sceneOptions.title;\n  }\n\n  _getLastScene(scene: NavigationScene): ?NavigationScene {\n    return this.props.scenes.find((s: *) => s.index === scene.index - 1);\n  }\n\n  _getBackButtonTitleString(scene: NavigationScene): ?string {\n    const lastScene = this._getLastScene(scene);\n    if (!lastScene) {\n      return null;\n    }\n    const { headerBackTitle } = this.props.getScreenDetails(lastScene).options;\n    if (headerBackTitle || headerBackTitle === null) {\n      return headerBackTitle;\n    }\n    return this._getHeaderTitleString(lastScene);\n  }\n\n  _getTruncatedBackButtonTitle(scene: NavigationScene): ?string {\n    const lastScene = this._getLastScene(scene);\n    if (!lastScene) {\n      return null;\n    }\n    return this.props.getScreenDetails(lastScene).options\n      .headerTruncatedBackTitle;\n  }\n\n  _navigateBack = () => {\n    this.props.navigation.goBack(null);\n  };\n\n  _renderTitleComponent = (props: SceneProps): ?React.Element<*> => {\n    const details = this.props.getScreenDetails(props.scene);\n    const headerTitle = details.options.headerTitle;\n    if (headerTitle && typeof headerTitle !== 'string') {\n      return headerTitle;\n    }\n    const titleString = this._getHeaderTitleString(props.scene);\n\n    const titleStyle = details.options.headerTitleStyle;\n    const color = details.options.headerTintColor;\n\n    // On iOS, width of left/right components depends on the calculated\n    // size of the title.\n    const onLayoutIOS =\n      Platform.OS === 'ios'\n        ? (e: LayoutEvent) => {\n            this.setState({\n              widths: {\n                ...this.state.widths,\n                [props.scene.key]: e.nativeEvent.layout.width,\n              },\n            });\n          }\n        : undefined;\n\n    return (\n      <HeaderTitle\n        onLayout={onLayoutIOS}\n        style={[color ? { color } : null, titleStyle]}\n      >\n        {titleString}\n      </HeaderTitle>\n    );\n  };\n\n  _renderLeftComponent = (props: SceneProps): ?React.Element<*> => {\n    const options = this.props.getScreenDetails(props.scene).options;\n    if (typeof options.headerLeft !== 'undefined') {\n      return options.headerLeft;\n    }\n    if (props.scene.index === 0) {\n      return null;\n    }\n    const backButtonTitle = this._getBackButtonTitleString(props.scene);\n    const truncatedBackButtonTitle = this._getTruncatedBackButtonTitle(\n      props.scene\n    );\n    const width = this.state.widths[props.scene.key]\n      ? (this.props.layout.initWidth - this.state.widths[props.scene.key]) / 2\n      : undefined;\n    return (\n      <HeaderBackButton\n        onPress={this._navigateBack}\n        pressColorAndroid={options.headerPressColorAndroid}\n        tintColor={options.headerTintColor}\n        title={backButtonTitle}\n        truncatedTitle={truncatedBackButtonTitle}\n        titleStyle={options.headerBackTitleStyle}\n        width={width}\n      />\n    );\n  };\n\n  _renderRightComponent = (props: SceneProps): ?React.Element<*> => {\n    const details = this.props.getScreenDetails(props.scene);\n    const { headerRight } = details.options;\n    return headerRight || null;\n  };\n\n  _renderLeft(props: SceneProps): ?React.Element<*> {\n    return this._renderSubView(\n      props,\n      'left',\n      this._renderLeftComponent,\n      HeaderStyleInterpolator.forLeft\n    );\n  }\n\n  _renderTitle(props: SceneProps, options: *): ?React.Element<*> {\n    const style = {};\n\n    if (Platform.OS === 'android') {\n      if (!options.hasLeftComponent) {\n        style.left = 0;\n      }\n      if (!options.hasRightComponent) {\n        style.right = 0;\n      }\n    }\n\n    return this._renderSubView(\n      { ...props, style },\n      'title',\n      this._renderTitleComponent,\n      HeaderStyleInterpolator.forCenter\n    );\n  }\n\n  _renderRight(props: SceneProps): ?React.Element<*> {\n    return this._renderSubView(\n      props,\n      'right',\n      this._renderRightComponent,\n      HeaderStyleInterpolator.forRight\n    );\n  }\n\n  _renderSubView<T>(\n    props: SceneProps,\n    name: SubViewName,\n    renderer: SubViewRenderer<T>,\n    styleInterpolator: NavigationStyleInterpolator\n  ): ?React.Element<*> {\n    const { scene } = props;\n    const { index, isStale, key } = scene;\n\n    const offset = this.props.navigation.state.index - index;\n\n    if (Math.abs(offset) > 2) {\n      // Scene is far away from the active scene. Hides it to avoid unnecessary\n      // rendering.\n      return null;\n    }\n\n    const subView = renderer(props);\n\n    if (subView == null) {\n      return null;\n    }\n\n    const pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';\n\n    return (\n      <Animated.View\n        pointerEvents={pointerEvents}\n        key={`${name}_${key}`}\n        style={[\n          styles.item,\n          styles[name],\n          props.style,\n          styleInterpolator({\n            // todo: determine if we really need to splat all this.props\n            ...this.props,\n            ...props,\n          }),\n        ]}\n      >\n        {subView}\n      </Animated.View>\n    );\n  }\n\n  _renderHeader(props: SceneProps): React.Element<*> {\n    const left = this._renderLeft(props);\n    const right = this._renderRight(props);\n    const title = this._renderTitle(props, {\n      hasLeftComponent: !!left,\n      hasRightComponent: !!right,\n    });\n\n    return (\n      <View\n        style={[StyleSheet.absoluteFill, styles.header]}\n        key={`scene_${props.scene.key}`}\n      >\n        {title}\n        {left}\n        {right}\n      </View>\n    );\n  }\n\n  render() {\n    let appBar;\n\n    if (this.props.mode === 'float') {\n      const scenesProps: Array<\n        SceneProps\n      > = this.props.scenes.map((scene: NavigationScene) => ({\n        position: this.props.position,\n        progress: this.props.progress,\n        scene,\n      }));\n      appBar = scenesProps.map(this._renderHeader, this);\n    } else {\n      appBar = this._renderHeader({\n        position: new Animated.Value(this.props.scene.index),\n        progress: new Animated.Value(0),\n        scene: this.props.scene,\n      });\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    const {\n      scenes,\n      scene,\n      position,\n      screenProps,\n      progress,\n      style,\n      ...rest\n    } = this.props;\n\n    const { options } = this.props.getScreenDetails(scene);\n    const headerStyle = options.headerStyle;\n\n    return (\n      <Animated.View {...rest} style={[styles.container, headerStyle, style]}>\n        <View style={styles.appBar}>{appBar}</View>\n      </Animated.View>\n    );\n  }\n}\n\nlet platformContainerStyles;\nif (Platform.OS === 'ios') {\n  platformContainerStyles = {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: 'rgba(0, 0, 0, .3)',\n  };\n} else {\n  platformContainerStyles = {\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth,\n    },\n    elevation: 4,\n  };\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: STATUSBAR_HEIGHT,\n    backgroundColor: Platform.OS === 'ios' ? '#F7F7F7' : '#FFF',\n    height: STATUSBAR_HEIGHT + APPBAR_HEIGHT,\n    ...platformContainerStyles,\n  },\n  appBar: {\n    flex: 1,\n  },\n  header: {\n    flexDirection: 'row',\n  },\n  item: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    bottom: 0,\n    left: TITLE_OFFSET,\n    right: TITLE_OFFSET,\n    top: 0,\n    position: 'absolute',\n    alignItems: Platform.OS === 'ios' ? 'center' : 'flex-start',\n  },\n  left: {\n    left: 0,\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n  },\n  right: {\n    right: 0,\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n  },\n});\n\nexport default Header;\n"]}]