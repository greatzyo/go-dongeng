Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/dhamaddam/AndroidStudioProjects/go-dongeng/Pages/ReadScreen.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactNativeViewpager = require('react-native-viewpager');

var _reactNativeViewpager2 = babelHelpers.interopRequireDefault(_reactNativeViewpager);

var _styles = require('./styles');

var _styles2 = babelHelpers.interopRequireDefault(_styles);

var _FormHeader = require('./FormHeader');

var _FormHeader2 = babelHelpers.interopRequireDefault(_FormHeader);

var deviceWidth = _reactNative.Dimensions.get('window').width;

var ReadScreen = function (_Component) {
  babelHelpers.inherits(ReadScreen, _Component);

  function ReadScreen(props) {
    babelHelpers.classCallCheck(this, ReadScreen);

    var _this = babelHelpers.possibleConstructorReturn(this, (ReadScreen.__proto__ || Object.getPrototypeOf(ReadScreen)).call(this, props));

    _this.ListViewItemSeparator = function () {
      return _react2.default.createElement(_reactNative.View, {
        style: {
          height: .5,
          width: "100%",
          backgroundColor: "#000"
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 65
        }
      });
    };

    _this.state = {
      isLoading: true,
      article_id: null
    };
    return _this;
  }

  babelHelpers.createClass(ReadScreen, [{
    key: 'GetItem',
    value: function GetItem(flower_name) {

      Alert.alert(flower_name);
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      console.log(this.props.navigation.state.params.article_id);


      return fetch('http://go-dongeng.com/ajax/show_full_mobile_article/' + this.props.navigation.state.params.article_id).then(function (response) {
        return response.json();
      }).then(function (responseJson) {
        var ds = new _reactNativeViewpager2.default.DataSource({
          pageHasChanged: function pageHasChanged(p1, p2) {
            return p1 !== p2;
          }
        });
        _this2.setState({
          isLoading: false,
          dataSource: ds.cloneWithPages(responseJson)
        }, function () {});
      }).catch(function (error) {
        console.error(error);
      });
    }
  }, {
    key: '_renderPage',
    value: function _renderPage(data, pageID) {
      return _react2.default.createElement(
        _reactNative.Image,
        {
          source: { uri: 'http://go-dongeng.com/assets/theme/default/images/content/' + data.picture },
          style: styles.page, __source: {
            fileName: _jsxFileName,
            lineNumber: 80
          }
        },
        _react2.default.createElement(
          _reactNative.ScrollView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 83
            }
          },
          _react2.default.createElement(
            _reactNative.Text,
            { style: _styles2.default.contentViewContainer, __source: {
                fileName: _jsxFileName,
                lineNumber: 84
              }
            },
            data.text
          )
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var navigate = this.props.navigation.navigate;

      if (this.state.isLoading) {
        return _react2.default.createElement(
          _reactNative.View,
          { style: { flex: 1, paddingTop: 20 }, __source: {
              fileName: _jsxFileName,
              lineNumber: 95
            }
          },
          _react2.default.createElement(_reactNative.ActivityIndicator, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 96
            }
          })
        );
      }

      return _react2.default.createElement(_reactNativeViewpager2.default, {
        style: this.props.style,
        dataSource: this.state.dataSource,
        renderPage: this._renderPage,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 102
        }
      });
    }
  }]);
  return ReadScreen;
}(_react.Component);

ReadScreen.navigationOptions = {
  header: null,
  title: 'Home'
};
exports.default = ReadScreen;


var styles = _reactNative.StyleSheet.create({
  page: {
    width: deviceWidth
  }
});

_reactNative.AppRegistry.registerComponent('go-dongeng', function () {
  return ReadScreen;
});