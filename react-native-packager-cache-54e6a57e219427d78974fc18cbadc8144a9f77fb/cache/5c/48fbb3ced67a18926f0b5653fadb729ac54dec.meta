["5474547d5b17d95585361af75dea8b2805cdcfcb","af57687e68386479b2506df8b739acbca08a4a65",["react","prop-types","react-native","../IndicatorViewPager"],[106,201,311,363],{"version":3,"sources":["/home/dhamaddam/AndroidStudioProjects/go-dongeng/node_modules/rn-viewpager/viewpager/indicator/PagerTabIndicator.js"],"names":["PagerTabIndicator","state","selectedIndex","props","initialPage","tabs","pager","style","itemStyle","selectedItemStyle","iconStyle","selectedIconStyle","textStyle","selectedTextStyle","changePageWithAnimation","length","tabsView","map","tab","index","isSelected","styles","itemContainer","setPage","setPageWithoutAnimation","image","selectedIconSource","iconSource","textSelected","text","container","e","setState","position","propTypes","number","instanceOf","arrayOf","shape","string","source","isRequired","bool","defaultProps","create","flexDirection","paddingTop","paddingBottom","borderTopWidth","borderTopColor","backgroundColor","alignItems","flex","marginTop","fontSize","color"],"mappings":"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","sourcesContent":["/**\n * Created by tangzhibin on 16/5/11.\n */\n\n'use strict'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { StyleSheet, View, Image, Text, TouchableOpacity } from 'react-native'\nimport IndicatorViewPager from '../IndicatorViewPager'\n\nexport default class PagerTabIndicator extends Component {\n    static propTypes = {\n        ...View.propTypes,\n        initialPage: PropTypes.number,\n        pager: PropTypes.instanceOf(IndicatorViewPager),\n        tabs: PropTypes.arrayOf(PropTypes.shape({\n            text: PropTypes.string,\n            iconSource: Image.propTypes.source,\n            selectedIconSource: Image.propTypes.source\n        })).isRequired,\n        itemStyle: View.propTypes.style,\n        selectedItemStyle: View.propTypes.style,\n        iconStyle: Image.propTypes.style,\n        selectedIconStyle: Image.propTypes.style,\n        textStyle: Text.propTypes.style,\n        selectedTextStyle: Text.propTypes.style,\n        changePageWithAnimation: PropTypes.bool,\n    }\n\n    static defaultProps = {\n        tabs: [],\n        changePageWithAnimation: true\n    }\n\n    state = {\n        selectedIndex: this.props.initialPage\n    }\n\n    render () {\n        let {\n            tabs, pager, style, itemStyle, selectedItemStyle, iconStyle,\n            selectedIconStyle, textStyle, selectedTextStyle, changePageWithAnimation\n        } = this.props\n        if (!tabs || tabs.length === 0) return null\n\n        let tabsView = tabs.map((tab, index) => {\n            let isSelected = this.state.selectedIndex === index\n            return (\n                <TouchableOpacity\n                    style={[styles.itemContainer, isSelected ? selectedItemStyle : itemStyle]}\n                    activeOpacity={0.6}\n                    key={index}\n                    onPress={() => {\n                        if (!isSelected){\n                            if (this.props.changePageWithAnimation)\n                                pager.setPage(index);\n                            else pager.setPageWithoutAnimation(index);\n                        }\n                    }}\n                >\n                    <Image\n                        style={[styles.image, isSelected ? selectedIconStyle : iconStyle]}\n                        source={isSelected ? tab.selectedIconSource : tab.iconSource}\n                    />\n                    <Text\n                        style={[isSelected ? styles.textSelected : styles.text, isSelected ? selectedTextStyle : textStyle]}\n                    >\n                        {tab.text}\n                    </Text>\n                </TouchableOpacity>\n            )\n        })\n        return (\n            <View style={[styles.container, style]} >\n                {tabsView}\n            </View>\n        )\n    }\n\n    onPageSelected (e) {\n        this.setState({selectedIndex: e.position})\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        paddingTop: 8,\n        paddingBottom: 4,\n        borderTopWidth: 0.5,\n        borderTopColor: '#E0E0E0',\n        backgroundColor: '#F7F7F7'\n    },\n    itemContainer: {\n        alignItems: 'center',\n        flex: 1\n    },\n    image: {},\n    text: {\n        marginTop: 4,\n        fontSize: 11,\n        color: '#999999'\n    },\n    textSelected: {\n        marginTop: 4,\n        fontSize: 11,\n        color: '#3584F6'\n    }\n})"]}]